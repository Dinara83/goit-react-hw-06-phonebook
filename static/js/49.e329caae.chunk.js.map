{"version":3,"file":"static/js/49.e329caae.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhonebookContact/contact-form.module.css?f162","components/PhonebookContact/ContactForm.jsx","webpack://react-homework-template/./src/components/FilterPhonebook/filter-phonebook.module.css?f313","components/FilterPhonebook/FilterPhonebook.jsx","webpack://react-homework-template/./src/components/Contacts/ContactListItem/contact-list-item.module.css?38d5","components/Contacts/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/Contacts/contact-list.module.css?6d9b","components/Contacts/ContactList.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.css?ebe0","pages/HomePage/HomePage.jsx","redux/actions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__s1ex-\",\"label\":\"contact-form_label__5BXR4\",\"input\":\"contact-form_input__ddo+t\",\"btn\":\"contact-form_btn__A8oGL\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport css from './contact-form.module.css';\n\nconst ContactForm = ({ onSubmitForm }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmitForm({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        className={css.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"filter-phonebook_wrapperFilter__ciemP\",\"labelFilter\":\"filter-phonebook_labelFilter__vfa04\",\"inputFilter\":\"filter-phonebook_inputFilter__Ep+md\"};","import PropTypes from 'prop-types';\n\nimport css from './filter-phonebook.module.css';\n\nconst FilterPhonebook = ({ onChange }) => {\n  return (\n    <form className={css.wrapperFilter}>\n      <label className={css.labelFilter}>Find contacts by name</label>\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nFilterPhonebook.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"contact-list-item_contactsItem__skN3h\",\"contactsText\":\"contact-list-item_contactsText__32u+d\",\"contactsBtn\":\"contact-list-item_contactsBtn__PcHHj\"};","import PropTypes from 'prop-types';\n\nimport css from './contact-list-item.module.css';\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={css.contactsItem}>\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      <button className={css.contactsBtn} onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contact-list_contactsList__Ab1Ox\"};","import PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem/ContactListItem';\n\nimport css from './contact-list.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div>\n      <ul className={css.contactsList}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            deleteContact={onDeleteContact}\n            id={id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPhonebook\":\"home-page_conteinerPhonebook__1GEc+\",\"text\":\"home-page_text__ml47M\"};","import { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from 'components/PhonebookContact/ContactForm';\nimport FilterPhonebook from 'components/FilterPhonebook/FilterPhonebook';\nimport ContactList from 'components/Contacts/ContactList';\n\nimport { addContact, deleteContact } from 'redux/actions';\n\nimport css from './home-page.module.css';\n\nconst HomePage = () => {\n  const contacts = useSelector(store => store.contacts);\n  const [filter, setFilter] = useState('');\n\n  const dispatch = useDispatch();\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = contacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n\n    const action = addContact({ name, number });\n    dispatch(action);\n  };\n\n    const handleDeleteContact = id => {\n\t\tconst action = deleteContact(id)\n\t\tdispatch(action)\n    };\n\n  const changeFilter = ({ target }) => setFilter(target.value);\n\n  const getfilterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedContact = filter.toLowerCase();\n    const result = contacts.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedContact) ||\n        number.toLowerCase().includes(normalizedContact)\n      );\n    });\n    return result;\n  };\n\n  const filteredContacts = getfilterContacts();\n  const isContacts = Boolean(filteredContacts.length);\n  return (\n    <main className={css.conteinerPhonebook}>\n      <ContactForm onSubmitForm={handleAddContact} />\n      <h2 className={css.text}>Contacts</h2>\n      <FilterPhonebook onChange={changeFilter} />\n      <ContactList\n        contacts={getfilterContacts()}\n        onDeleteContact={handleDeleteContact}\n      />\n      {!isContacts && <p>No contacts</p>}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import { nanoid } from 'nanoid';\n\nimport { ADD_CONTACT, DELETE_CONTACT } from './types';\n\nexport const addContact = payload => {\n  return {\n    type: ADD_CONTACT,\n    payload: {\n      id: nanoid(),\n      ...payload,\n    },\n  };\n};\n\nexport const deleteContact = payload => {\n  return {\n    type: DELETE_CONTACT,\n    payload,\n  };\n};\n"],"names":["onSubmitForm","useState","name","setName","number","setNumber","handleChange","evt","currentTarget","value","className","css","onSubmit","preventDefault","type","onChange","pattern","title","required","id","deleteContact","onClick","contacts","onDeleteContact","map","useSelector","store","filter","setFilter","dispatch","useDispatch","getfilterContacts","normalizedContact","toLowerCase","includes","filteredContacts","isContacts","Boolean","length","normalizedName","result","find","isDublicate","alert","payload","action","ADD_CONTACT","nanoid","target","DELETE_CONTACT"],"sourceRoot":""}