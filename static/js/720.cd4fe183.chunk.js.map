{"version":3,"file":"static/js/720.cd4fe183.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/PhonebookContact/inititialState.js","webpack://react-homework-template/./src/components/PhonebookContact/contact-form.module.css?f162","components/PhonebookContact/ContactForm.jsx","webpack://react-homework-template/./src/components/FilterPhonebook/filter-phonebook.module.css?f313","components/FilterPhonebook/FilterPhonebook.jsx","webpack://react-homework-template/./src/components/Contacts/contact-list.module.css?6d9b","components/Contacts/ContactList.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/phonebook.module.css?4f9b","components/Phonebook.jsx","redux/contacts/contacts-actions.js","redux/filter/filter-actions.js","pages/HomePage/HomePage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","const inititialState = {\n  name: '',\n  number: '',\n  importantContact: false,\n};\n\nexport default inititialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__s1ex-\",\"label\":\"contact-form_label__5BXR4\",\"input\":\"contact-form_input__ddo+t\",\"btn\":\"contact-form_btn__A8oGL\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport inititialState from './inititialState';\nimport css from './contact-form.module.css';\n\nconst ContactForm = ({ onSubmitForm }) => {\n  const [state, setState] = useState({ ...inititialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmitForm({ ...state });\n    setState({ ...inititialState });\n  };\n\n  const { name, number, importantContact } = state;\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        className={css.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <label className={css.label}>Important Contact</label>\n      <input\n        name=\"importantContact\"\n        checked={importantContact}\n        type=\"checkbox\"\n        onChange={handleChange}\n      />\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"filter-phonebook_wrapperFilter__ciemP\",\"labelFilter\":\"filter-phonebook_labelFilter__vfa04\",\"inputFilter\":\"filter-phonebook_inputFilter__Ep+md\"};","import PropTypes from 'prop-types';\n\nimport css from './filter-phonebook.module.css';\n\nconst FilterPhonebook = ({ onChange, value }) => {\n  return (\n    <form className={css.wrapperFilter}>\n      <label className={css.labelFilter}>Find contacts by name</label>\n      <input\n\t  value={value}\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nFilterPhonebook.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contact-list_contactsList__Ab1Ox\",\"contactsText\":\"contact-list_contactsText__Try7T\",\"contactsBtn\":\"contact-list_contactsBtn__BU7fk\"};","import PropTypes from 'prop-types';\n\nimport css from './contact-list.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  const elements = contacts.map(({ id, name, number, importantContact }) => (\n    <li key={id} className={{ fontWeight: importantContact ? 'bold' : 'normal' }}>\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      <button className={css.contactsBtn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul className={css.contactsList}>{elements}</ul>\n    </div>\n  );\n};\n\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPhonebook\":\"phonebook_conteinerPhonebook__tbx9-\",\"text\":\"phonebook_text__GatYR\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from 'components/PhonebookContact/ContactForm';\nimport FilterPhonebook from 'components/FilterPhonebook/FilterPhonebook';\nimport ContactList from 'components/Contacts/ContactList';\n\nimport { addContact, deleteContact } from 'redux/contacts/contacts-actions';\nimport { setFilter } from 'redux/filter/filter-actions';\n\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './phonebook.module.css';\n\nconst Phonebook = () => {\n  const filterContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n  \n  const dispatch = useDispatch();\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = allContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number, importantContact }) => {\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n\n    const action = addContact({ name, number, importantContact });\n    dispatch(action);\n  };\n\n  const handleDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filterContacts.length);\n  return (\n    <main className={css.conteinerPhonebook}>\n      <ContactForm onSubmitForm={handleAddContact} />\n      <h2 className={css.text}>Contacts</h2>\n      <FilterPhonebook value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filterContacts}\n        onDeleteContact={handleDeleteContact}\n      />\n      {!isContacts && <p>No contacts</p>}\n    </main>\n  );\n};\n\nexport default Phonebook;\n","import { nanoid } from 'nanoid';\n\nimport { ADD_CONTACT, DELETE_CONTACT } from './contacts-types';\n\nexport const addContact = payload => {\n  return {\n    type: ADD_CONTACT,\n    payload: {\n      id: nanoid(),\n      ...payload,\n    },\n  };\n};\n\nexport const deleteContact = payload => {\n  return {\n    type: DELETE_CONTACT,\n    payload,\n  };\n};\n","import { SET_FILTER } from './filter-types';\n\nexport const setFilter = payload => {\n  return {\n    type: SET_FILTER,\n    payload,\n  };\n};\n","import Phonebook from 'components/Phonebook'\n\nconst HomePage = () => {\n  return <Phonebook />;\n};\n\nexport default HomePage;\n","export const getAllContacts = store => store.contacts;\n\nexport const getImportandContacts = ({ contacts }) => {\n  const onlyImportandContacts = contacts.filter(\n    ({ importantContact }) => importantContact\n  );\n  return onlyImportandContacts;\n};\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","name","number","importantContact","onSubmitForm","useState","inititialState","state","setState","handleChange","type","checked","newValue","prevState","className","css","onSubmit","evt","preventDefault","onChange","pattern","title","required","contacts","onDeleteContact","elements","map","id","fontWeight","onClick","getFilter","filterContacts","useSelector","getFilteredContacts","allContacts","getAllContacts","dispatch","useDispatch","isContacts","Boolean","normalizedName","toLowerCase","result","find","isDublicate","alert","payload","action","ADD_CONTACT","nanoid","SET_FILTER","DELETE_CONTACT","store","getImportandContacts","normalizedContact","includes"],"sourceRoot":""}