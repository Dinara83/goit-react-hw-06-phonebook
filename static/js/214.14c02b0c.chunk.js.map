{"version":3,"file":"static/js/214.14c02b0c.chunk.js","mappings":"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","sources":["components/PhonebookContact/inititialState.js","webpack://react-homework-template/./src/components/PhonebookContact/contact-form.module.css?f162","components/PhonebookContact/ContactForm.jsx","webpack://react-homework-template/./src/components/FilterPhonebook/filter-phonebook.module.css?f313","components/FilterPhonebook/FilterPhonebook.jsx","webpack://react-homework-template/./src/components/Contacts/contact-list.module.css?6d9b","components/Contacts/ContactList.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/phonebook.module.css?4f9b","components/Phonebook.jsx","pages/HomePage/HomePage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["const inititialState = {\n  name: '',\n  number: '',\n  importantContact: false,\n};\n\nexport default inititialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__s1ex-\",\"label\":\"contact-form_label__5BXR4\",\"input\":\"contact-form_input__ddo+t\",\"btn\":\"contact-form_btn__A8oGL\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport inititialState from './inititialState';\nimport css from './contact-form.module.css';\n\nconst ContactForm = ({ onSubmitForm }) => {\n  const [state, setState] = useState({ ...inititialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmitForm({ ...state });\n    setState({ ...inititialState });\n  };\n\n  const { name, number, importantContact } = state;\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        className={css.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <label className={css.label}>Important Contact</label>\n      <input\n        name=\"importantContact\"\n        checked={importantContact}\n        type=\"checkbox\"\n        onChange={handleChange}\n      />\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"filter-phonebook_wrapperFilter__ciemP\",\"labelFilter\":\"filter-phonebook_labelFilter__vfa04\",\"inputFilter\":\"filter-phonebook_inputFilter__Ep+md\"};","import PropTypes from 'prop-types';\n\nimport css from './filter-phonebook.module.css';\n\nconst FilterPhonebook = ({ onChange, value }) => {\n  return (\n    <form className={css.wrapperFilter}>\n      <label className={css.labelFilter}>Find contacts by name</label>\n      <input\n        value={value}\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nFilterPhonebook.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contact-list_contactsList__Ab1Ox\",\"contactsText\":\"contact-list_contactsText__Try7T\",\"contactsBtn\":\"contact-list_contactsBtn__BU7fk\"};","import PropTypes from 'prop-types';\n\nimport css from './contact-list.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  const elements = contacts.map(({ id, name, number, importantContact }) => (\n    <li\n      key={id}\n      className={{ fontWeight: importantContact ? 'bold' : 'normal' }}\n    >\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      <button className={css.contactsBtn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul className={css.contactsList}>{elements}</ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPhonebook\":\"phonebook_conteinerPhonebook__tbx9-\",\"text\":\"phonebook_text__GatYR\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from 'components/PhonebookContact/ContactForm';\nimport FilterPhonebook from 'components/FilterPhonebook/FilterPhonebook';\nimport ContactList from 'components/Contacts/ContactList';\n\nimport { addContact, deleteContact } from 'redux/contacts/contacts-slice';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './phonebook.module.css';\n\nconst Phonebook = () => {\n  const filterContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = allContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number, importantContact }) => {\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n\n    const action = addContact({ name, number, importantContact });\n    dispatch(action);\n  };\n\n  const handleDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filterContacts.length);\n  return (\n    <main className={css.conteinerPhonebook}>\n      <ContactForm onSubmitForm={handleAddContact} />\n      <h2 className={css.text}>Contacts</h2>\n      <FilterPhonebook value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filterContacts}\n        onDeleteContact={handleDeleteContact}\n      />\n      {!isContacts && <p>No contacts</p>}\n    </main>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook';\n\nconst HomePage = () => {\n  return <Phonebook />;\n};\n\nexport default HomePage;\n","export const getAllContacts = store => store.contacts;\n\nexport const getImportantContacts = ({ contacts }) => {\n  const onlyImportantContacts = contacts.filter(\n    ({ importantContact }) => importantContact\n  );\n  return onlyImportantContacts;\n};\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["name","number","importantContact","onSubmitForm","useState","inititialState","state","setState","handleChange","target","value","type","checked","newValue","prevState","className","css","onSubmit","evt","preventDefault","onChange","pattern","title","required","contacts","onDeleteContact","elements","map","id","fontWeight","onClick","getFilter","filter","filterContacts","useSelector","getFilteredContacts","allContacts","getAllContacts","dispatch","useDispatch","isContacts","Boolean","length","normalizedName","toLowerCase","result","find","isDublicate","alert","action","addContact","setFilter","deleteContact","store","getImportantContacts","normalizedContact","includes"],"sourceRoot":""}