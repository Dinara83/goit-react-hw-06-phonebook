{"version":3,"file":"static/js/159.21da662c.chunk.js","mappings":"yMACA,GAAiB,E,SC8BjB,EA1B8B,WAC5B,IASMA,GATWC,EAAAA,EAAAA,IAAYC,EAAAA,IASHC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC5B,eAAaC,UAAWC,EAAAA,aAAxB,UACE,kBAAMD,UAAWC,EAAAA,aAAjB,UACGH,EADH,KACWC,MAFJF,EADmB,IAW9B,OAAO,eAAIG,UAAWC,EAAAA,aAAf,SACAR,GAER,C,uGC7BM,IAAMS,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEtBT,EAAuB,SAAC,GAInC,OAJoD,EAAfS,SACEC,QACrC,qBAAGC,gBAAH,GAGH,EAEYC,EAAsB,SAAC,GAA0B,IAAxBH,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC9C,IAAKA,EACH,OAAOD,EAET,IAAMI,EAAoBH,EAAOI,cAOjC,OANeL,EAASC,QAAO,YAAuB,IAApBP,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtC,OACED,EAAKW,cAAcC,SAASF,IAC5BT,EAAOU,cAAcC,SAASF,EAEjC,GAEF,C","sources":["pages/ImportantContactsPage/important-contacts-page.module.css","pages/ImportantContactsPage/ImportantContactsPage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector } from 'react-redux';\nimport { getImportandContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './important-contacts-page.module.css';\n\nconst ImportantContactsPage = () => {\n  const contacts = useSelector(getImportandContacts);\n\n//   const removeContact = id => {\n//     setContacts(prevContacts =>\n//       prevContacts.filter(contact => contact.id !== id)\n//     );\n//   };\n\n\n  const elements = contacts.map(({ id, name, number }) => (\n    <li key={id} className={css.contactsItem}>\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      {/* <button className={css.contactsBtn} onClick={() => removeContact(id)}>\n        Delete\n      </button> */}\n    </li>\n  ));\n\n  return <ul className={css.contactsList}>\n        {elements}\n  </ul>;\n};\n\nexport default ImportantContactsPage;\n","export const getAllContacts = store => store.contacts;\n\nexport const getImportandContacts = ({ contacts }) => {\n  const onlyImportandContacts = contacts.filter(\n    ({ importantContact }) => importantContact\n  );\n  return onlyImportandContacts;\n};\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["elements","useSelector","getImportandContacts","map","id","name","number","className","css","getAllContacts","store","contacts","filter","importantContact","getFilteredContacts","normalizedContact","toLowerCase","includes"],"sourceRoot":""}